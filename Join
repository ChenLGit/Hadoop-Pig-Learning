------ Join ------
-- Joins is one of the workhorses of data processing; 
   Join selects records from one input to put together with records from another input by indicating keys for each input
-- Several kinds supported
  – Inner Joins
  – Outer Joins
    • Left Joins, Right Joins, Full joins
  – Multiple Joins

  --- Inner Join ---
  - Join by one key – symbol
    daily = LOAD 'NYSE_daily' AS (exchange, symbol, date, open, high, low, close, volume, adj_close);
    divs  = LOAD 'NYSE_divdends' AS (exchange, symbol, date, dividends);
    jnd   = JOIN daily BY symbol, divs BY symbol;
    
  - Join by multiple keys (multiple dataset at same time)
    daily = LOAD 'NYSE_daily' AS (exchange, symbol, date, open, high, low, close, volume, adj_close); 
    divs  = LOAD 'NYSE_dividends' as (exchange, symbol, date, dividends);
    jnd   = JOIN daily BY (symbol, date), divs BY (symbol, date);
    
  --- Outer Join ---
  In outer joins, records that do not have a match on the other side are included, with null values being filled in for the missing fields.
  -- Outer joins can be left, right, or full.
    - leftjoin.pig
    daily = LOAD 'NYSE_daily' AS (... ...)
    divs  = LOAD 'NYSE_dividens' AS (... ...)
    jnd   = JOIN daily BY (symbol, date) LEFT OUTER, divs BY (symbol, date);
    *** The key word LEFT can be changed to RIGHT and FULL ***
    Outer joins are supported only when Pig knows the schema of the data on the side(s) for which it might need to fill in nulls.

  --- Multiple Joins ---
  Pig can do multiple joins in a single operation, as long as they are all being joined on the same key(s).
  *** Can be done only for inner joins ***
  Example:
  A = LOAD 'input1' AS (x, y);
  B = LOAD 'input2' AS (u, v);
  C = LOAD 'input3' AS (e, f);
  alpha = JOIN A BY x, B by u, C BY e;

  --- Join Small to Large Data ---
  – Using ‘replicate’
  jnd = JOIN daily BY (exchange, symbol), divs BY (exchange, symbol) USING 'REPLICATED';
  
  --- Join Sorted Data ---
  – Using ‘merge’
  jnd = JOIN daily BY symbol, divs BY symbol USING 'MERGE';
  
  --- Join Skewed Data ---
  – Using ‘skewed’
  users = LOAD 'users' as (name:chararray, city:chararray);
  cinfo = LOAD 'cityinfo' as (city:chararray, population:int);
  jnd   = JOIN cinfo BY city, users BY city USING 'SKEWED';
  
  
  
  
  
